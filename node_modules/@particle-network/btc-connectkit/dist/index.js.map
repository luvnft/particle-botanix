{
  "version": 3,
  "sources": ["../src/index.ts", "../src/connector/base.ts", "../src/connector/injected.ts", "../src/connector/bitget.ts", "../src/connector/bybit.ts", "../src/connector/okx.ts", "../src/connector/tokenPocket.ts", "../src/connector/unisat.ts", "../src/connector/wizz.ts", "../src/connector/xverse.ts", "../src/context/index.tsx", "../src/components/connectModal/index.tsx", "../src/hooks/useAccounts.ts", "../src/hooks/useBTCContractVersion.ts", "../src/hooks/useBTCProvider.ts", "../src/hooks/useConnectModal.ts", "../src/hooks/useConnector.ts", "../src/hooks/useETHProvider.ts", "../src/evmSigner/provider.ts", "../src/utils/eventUtils.ts", "../src/utils/txConfirmUtils.ts", "esbuild-scss-modules-plugin:./spinner.module.scss", "../src/components/spinner/index.tsx", "esbuild-scss-modules-plugin:./button.module.scss", "../src/components/button/index.tsx", "../src/components/modal/index.tsx", "esbuild-scss-modules-plugin:./modal.module.scss", "esbuild-scss-modules-plugin:./connect.module.scss", "../src/components/signModal/index.tsx", "../src/utils/index.ts", "../src/utils/ethereumUtils.ts", "../src/components/copyText/index.tsx", "esbuild-scss-modules-plugin:./copyText.module.scss", "../src/components/transactionDetails/index.tsx", "esbuild-scss-modules-plugin:./tooltip.module.scss", "../src/components/tooltip/index.tsx", "esbuild-scss-modules-plugin:./transactionDetails.module.scss", "esbuild-scss-modules-plugin:./sign.module.scss", "../src/evmSigner/index.ts", "../src/hooks/useModalStateValue.ts"],
  "sourcesContent": ["export * from './connector';\nexport { ConnectProvider } from './context';\nexport * from './hooks';\nexport const getVersion = () => {\n  return '1.0.0-alpha.17';\n};\n\nif (typeof window !== 'undefined') {\n  (window as any).__PARTICLE_BTC_CONNECT_VERSION = getVersion();\n}\n", "export interface WalletMetadata {\n  id: string;\n  name: string;\n  icon: string;\n  downloadUrl: string;\n}\n\nexport abstract class BaseConnector {\n  abstract readonly metadata: WalletMetadata;\n  abstract isReady(): boolean;\n  abstract requestAccounts(): Promise<string[]>;\n  abstract getAccounts(): Promise<string[]>;\n  abstract getPublicKey(): Promise<string>;\n  abstract signMessage(signStr: string, type?: 'ecdsa' | 'bip322-simple'): Promise<string>;\n  abstract on(event: string, handler: (data?: unknown) => void): void;\n  abstract removeListener(event: string, handler: (data?: unknown) => void): void;\n  [key: string]: any;\n  abstract getProvider(): any;\n  abstract getNetwork(): Promise<'livenet' | 'testnet'>;\n  abstract switchNetwork(network: 'livenet' | 'testnet'): Promise<void>;\n  abstract sendBitcoin(toAddress: string, satoshis: number, options?: { feeRate: number }): Promise<string>;\n  abstract sendInscription(\n    address: string,\n    inscriptionId: string,\n    options?: { feeRate: number }\n  ): Promise<{ txid: string }>;\n  abstract disconnect(): void;\n}\n", "import { BaseConnector } from './base';\n\nexport abstract class InjectedConnector extends BaseConnector {\n  constructor(private propertity: string) {\n    super();\n    const props = this.propertity?.split('.');\n    if (!this.propertity || props.length > 2) {\n      throw new Error('please input valid propertity');\n    }\n  }\n  isReady(): boolean {\n    if (typeof window !== 'undefined') {\n      const props = this.propertity.split('.');\n      if (props.length === 1) {\n        return typeof (window as any)[props[0]] !== 'undefined';\n      } else {\n        return (\n          typeof (window as any)[props[0]] !== 'undefined' && typeof (window as any)[props[0]][props[1]] !== 'undefined'\n        );\n      }\n    }\n    return false;\n  }\n\n  async requestAccounts(): Promise<string[]> {\n    const accounts = await this.getProviderOrThrow().requestAccounts();\n    console.log('\uD83D\uDE80 ~ InjectedConnector ~ requestAccounts ~ accounts:', accounts);\n    return accounts;\n  }\n\n  async getAccounts(): Promise<string[]> {\n    const accounts = await this.getProviderOrThrow().getAccounts();\n    return accounts;\n  }\n  async getPublicKey(): Promise<string> {\n    return this.getProviderOrThrow().getPublicKey();\n  }\n  async signMessage(signStr: string, type?: 'ecdsa' | 'bip322-simple'): Promise<string> {\n    const addresses = await this.getAccounts();\n    if (addresses.length === 0) {\n      throw new Error(`${this.metadata.name} not connected!`);\n    }\n    return this.getProviderOrThrow().signMessage(signStr, type);\n  }\n  on(event: string, handler: (data?: unknown) => void) {\n    const provider = this.getProvider();\n    return provider?.on?.(event, handler);\n  }\n  removeListener(event: string, handler: (data?: unknown) => void) {\n    const provider = this.getProvider();\n    return provider?.removeListener?.(event, handler);\n  }\n\n  getProvider() {\n    if (this.isReady()) {\n      const props = this.propertity.split('.');\n      if (props.length === 1) {\n        return (window as any)[props[0]];\n      } else {\n        return (window as any)[props[0]][props[1]];\n      }\n    }\n  }\n\n  getProviderOrThrow() {\n    const provider = this.getProvider();\n    if (!provider) {\n      throw new Error(`${this.metadata.name} is not install or not create Bitcoin wallet!`);\n    }\n    return provider;\n  }\n\n  async getNetwork(): Promise<'livenet' | 'testnet'> {\n    return this.getProviderOrThrow().getNetwork();\n  }\n  async switchNetwork(network: 'livenet' | 'testnet'): Promise<void> {\n    return this.getProviderOrThrow().switchNetwork(network);\n  }\n\n  async sendBitcoin(toAddress: string, satoshis: number, options?: { feeRate: number }): Promise<string> {\n    return this.getProviderOrThrow().sendBitcoin(toAddress, satoshis, options);\n  }\n\n  async sendInscription(\n    address: string,\n    inscriptionId: string,\n    options?: { feeRate: number }\n  ): Promise<{ txid: string }> {\n    const result = await this.getProviderOrThrow().sendInscription(address, inscriptionId, options);\n    if (typeof result === 'string') {\n      return {\n        txid: result,\n      };\n    }\n\n    return result;\n  }\n\n  disconnect() {}\n}\n", "import icon from '../icons/bitget.png';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class BitgetConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'bitget',\n    name: 'Bitget Wallet',\n    icon,\n    downloadUrl: 'https://web3.bitget.com/en/wallet-download',\n  };\n\n  constructor() {\n    super('bitkeep.unisat');\n  }\n}\n", "import icon from '../icons/bybit.png';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class BybitConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'bybit',\n    name: 'Bybit Wallet',\n    icon,\n    downloadUrl: 'https://www.bybit.com/download/',\n  };\n\n  constructor() {\n    super('bybitWallet.bitcoin');\n  }\n}\n", "import icon from '../icons/okx.svg';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class OKXConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'okx',\n    name: 'OKX Wallet',\n    icon,\n    downloadUrl: 'https://www.okx.com/download',\n  };\n  constructor() {\n    super('okxwallet.bitcoin');\n  }\n}\n", "import icon from '../icons/tokenpocket.png';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class TokenPocketConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'tokenpocket',\n    name: 'TokenPocket',\n    icon,\n    downloadUrl: 'https://www.tokenpocket.pro/en/download/app',\n  };\n\n  constructor() {\n    super('tokenpocket.bitcoin');\n  }\n}\n", "import icon from '../icons/unisat.svg';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class UnisatConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'unisat',\n    name: 'Unisat Wallet',\n    icon,\n    downloadUrl: 'https://unisat.io',\n  };\n\n  constructor() {\n    super('unisat');\n  }\n}\n", "import icon from '../icons/wizz.svg';\nimport { type WalletMetadata } from './base';\nimport { InjectedConnector } from './injected';\n\nexport class WizzConnector extends InjectedConnector {\n  readonly metadata: WalletMetadata = {\n    id: 'wizz',\n    name: 'Wizz Wallet',\n    icon,\n    downloadUrl: 'https://wizzwallet.io',\n  };\n\n  constructor() {\n    super('wizz');\n  }\n}\n", "import EventEmitter from 'events';\nimport type { Address, GetAddressOptions, SendBtcTransactionOptions, SignMessageOptions } from 'sats-connect';\nimport icon from '../icons/xverse.png';\nimport { BaseConnector, type WalletMetadata } from './base';\nexport class XverseConnector extends BaseConnector {\n  #network = 'Mainnet'; // Testnet\n  #event = new EventEmitter();\n  constructor() {\n    super();\n    this.#event.setMaxListeners(100);\n  }\n  readonly metadata: WalletMetadata = {\n    id: 'xverse',\n    name: 'Xverse Wallet',\n    icon,\n    downloadUrl: 'https://www.xverse.app',\n  };\n  isReady(): boolean {\n    return typeof window !== 'undefined' && typeof window.BitcoinProvider !== 'undefined';\n  }\n  private loadAccounts = async (network: 'Mainnet' | 'Testnet') => {\n    const { getAddress, AddressPurpose } = await import('sats-connect');\n    const addresses = await new Promise<Address[]>((resolve, reject) => {\n      const getAddressOptions: GetAddressOptions = {\n        payload: {\n          purposes: [AddressPurpose.Payment, AddressPurpose.Ordinals],\n          message: 'Address for receiving Ordinals and payments',\n          network: {\n            type: network as any,\n          },\n        },\n        onFinish: (response) => {\n          resolve(response.addresses);\n        },\n        onCancel: () =>\n          reject({\n            code: 4001,\n            message: 'User rejected the request.',\n          }),\n      };\n      getAddress(getAddressOptions).catch((error) => reject(error));\n    });\n    localStorage.setItem('btc-connect-xverse-addresses-' + network, JSON.stringify(addresses));\n    return addresses;\n  };\n  async sendInscription(): Promise<{ txid: string }> {\n    throw new Error('Unsupported');\n  }\n  async requestAccounts(): Promise<string[]> {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    const addresses = await this.loadAccounts(this.#network as any);\n    return addresses.map((item) => item.address);\n  }\n  async getAccounts(): Promise<string[]> {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    const data = localStorage.getItem('btc-connect-xverse-addresses-' + this.#network);\n    if (data) {\n      const addresses: Address[] = JSON.parse(data);\n      return addresses.map((item) => item.address);\n    } else {\n      return [];\n    }\n  }\n  async getPublicKey(): Promise<string> {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    const data = localStorage.getItem('btc-connect-xverse-addresses-' + this.#network);\n    if (data) {\n      const addresses: Address[] = JSON.parse(data);\n      return addresses[0].publicKey;\n    } else {\n      return '';\n    }\n  }\n  async signMessage(signStr: string): Promise<string> {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    const addresses = await this.getAccounts();\n    if (addresses.length === 0) {\n      throw new Error(`${this.metadata.name} not connected!`);\n    }\n    const { signMessage } = await import('sats-connect');\n\n    const sig = await new Promise<string>((resolve, reject) => {\n      const signMessageOptions: SignMessageOptions = {\n        payload: {\n          network: {\n            type: this.#network as any,\n          },\n          address: addresses[0],\n          message: signStr,\n        },\n        onFinish: (response) => {\n          resolve(response);\n        },\n        onCancel: () => {\n          reject({\n            code: 4001,\n            message: 'User rejected the request.',\n          });\n        },\n      };\n      signMessage(signMessageOptions).catch((e) => {\n        reject(e);\n      });\n    });\n\n    const modifiedSig = Buffer.from(sig, 'base64');\n    modifiedSig[0] = 31 + ((modifiedSig[0] - 31) % 4);\n    return modifiedSig.toString('base64');\n  }\n  on(event: string, handler: (data?: unknown) => void) {\n    return this.#event.on(event, handler);\n  }\n  removeListener(event: string, handler: (data?: unknown) => void) {\n    return this.#event.removeListener(event, handler);\n  }\n  getProvider() {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    return window.BitcoinProvider;\n  }\n  async getNetwork(): Promise<'livenet' | 'testnet'> {\n    if (!this.isReady()) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    return this.#network === 'Mainnet' ? 'livenet' : 'testnet';\n  }\n  async switchNetwork(): Promise<void> {\n    throw new Error('Unsupported');\n  }\n  async sendBitcoin(toAddress: string, satoshis: number): Promise<string> {\n    const provider = this.getProvider();\n    if (!provider) {\n      throw new Error(`${this.metadata.name} is not install!`);\n    }\n    const { sendBtcTransaction } = await import('sats-connect');\n\n    const addresses = await this.getAccounts();\n    if (addresses.length === 0) {\n      throw new Error(`${this.metadata.name} not connected!`);\n    }\n    const result = await new Promise<string>((resolve, reject) => {\n      const sendBtcOptions: SendBtcTransactionOptions = {\n        payload: {\n          network: {\n            type: this.#network as any,\n          },\n          recipients: [\n            {\n              address: toAddress,\n              amountSats: BigInt(satoshis),\n            },\n          ],\n          senderAddress: addresses[0],\n        },\n        onFinish: (response) => {\n          resolve(response);\n        },\n        onCancel: () => {\n          reject({\n            code: 4001,\n            message: 'User rejected the request.',\n          });\n        },\n      };\n      sendBtcTransaction(sendBtcOptions).catch((e) => reject(e));\n    });\n    return result;\n  }\n  disconnect(): void {\n    localStorage.removeItem('btc-connect-xverse-addresses-Mainnet');\n    localStorage.removeItem('btc-connect-xverse-addresses-Testnet');\n  }\n}\n", "import { SmartAccount, type AAOptions } from '@particle-network/aa';\nimport { chains } from '@particle-network/chains';\nimport { walletEntryPlugin, type WalletOption } from '@particle-network/wallet';\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport ConnectModal from '../components/connectModal';\nimport SignModal from '../components/signModal';\nimport { type BaseConnector } from '../connector/base';\nimport { AASignerProvider } from '../evmSigner';\nimport useModalStateValue from '../hooks/useModalStateValue';\nimport { EventName } from '../types/eventName';\nimport { checkBTCVersion } from '../utils';\nimport { getBTCAAAddress } from '../utils/ethereumUtils';\nimport events from '../utils/eventUtils';\nimport txConfirm from '../utils/txConfirmUtils';\n\ninterface GlobalState {\n  connectorId?: string;\n  setConnectorId: (connectorId?: string) => void;\n  connector?: BaseConnector;\n  connectors: BaseConnector[];\n  openConnectModal: () => void;\n  closeConnectModal: () => void;\n  accounts: string[];\n  provider: any;\n  disconnect: () => void;\n  getPublicKey: () => Promise<string>;\n  signMessage: (message: string) => Promise<string>;\n  evmAccount?: string;\n  smartAccount?: SmartAccount;\n  switchNetwork: (network: 'livenet' | 'testnet') => Promise<void>;\n  getNetwork: () => Promise<'livenet' | 'testnet'>;\n  sendBitcoin: (toAddress: string, satoshis: number, options?: { feeRate: number }) => Promise<string>;\n  btcContractVersion: string;\n  setBTCContractVersion: (version: string) => void;\n  btcContractVersionList: string[];\n}\n\nconst ConnectContext = createContext<GlobalState>({} as any);\n\ninterface ConnectOptions {\n  projectId: string;\n  clientKey: string;\n  appId: string;\n  aaOptions: AAOptions;\n  rpcUrls?: Record<number, string>;\n  walletOptions?: Omit<WalletOption, 'erc4337' | 'customStyle'> & {\n    customStyle?: Omit<WalletOption['customStyle'], 'supportChains' | 'evmSupportWalletConnect'>;\n  };\n}\n\nexport const ConnectProvider = ({\n  children,\n  options,\n  connectors,\n  autoConnect = true,\n}: {\n  children: React.ReactNode;\n  options: ConnectOptions;\n  connectors: BaseConnector[];\n  autoConnect?: boolean;\n}) => {\n  const {\n    closeModal: closeConnectModal,\n    isModalOpen: connectModalOpen,\n    openModal: openConnectModal,\n  } = useModalStateValue();\n\n  const { closeModal: closeSignModal, isModalOpen: signModalOpen, openModal: openSignModal } = useModalStateValue();\n\n  const [connectorId, setConnectorId] = useState<string>();\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [evmAccount, setEVMAccount] = useState<string>();\n  const BTCVersionKey = 'particleBTCVersion';\n  const [btcContractVersion, _setBTCContractVersion] = useState<string>(\n    options.aaOptions.accountContracts['BTC']?.[0].version || '1.0.0'\n  );\n\n  const setBTCContractVersion = useCallback(\n    (version: string) => {\n      if (!checkBTCVersion(options.aaOptions.accountContracts, version)) {\n        throw new Error(`Invalid btc version: ${version}`);\n      }\n      localStorage.setItem(BTCVersionKey, version);\n      _setBTCContractVersion(version);\n    },\n    [options.aaOptions.accountContracts]\n  );\n\n  const btcContractVersionList = useMemo(() => {\n    return options.aaOptions.accountContracts['BTC'].map((item) => item.version) as string[];\n  }, [options.aaOptions.accountContracts]);\n\n  useEffect(() => {\n    const id = localStorage.getItem('current-connector-id');\n    if (autoConnect && id) {\n      setConnectorId(id);\n    }\n  }, [autoConnect]);\n\n  const evmSupportChainIds = useMemo(() => {\n    let chainIds = options.aaOptions.accountContracts['BTC']\n      .filter((item) => item.version === btcContractVersion)\n      .map((item) => item.chainIds)\n      .reduce((a, b) => {\n        a.push(...b);\n        return a;\n      }, []);\n    chainIds = Array.from(new Set(chainIds));\n    return chainIds;\n  }, [options.aaOptions.accountContracts, btcContractVersion]);\n\n  const connector = useMemo(() => {\n    return connectors.find((item) => item.metadata.id === connectorId);\n  }, [connectorId, connectors]);\n\n  const getPublicKey = useCallback(async () => {\n    if (!connector) {\n      throw new Error('Wallet not connected!');\n    }\n    const pubKey = await connector.getPublicKey();\n    return pubKey;\n  }, [connector]);\n\n  const signMessage = useCallback(\n    async (message: string) => {\n      if (!connector) {\n        throw new Error('Wallet not connected!');\n      }\n      const signature = await connector.signMessage(message);\n      return signature;\n    },\n    [connector]\n  );\n\n  const sendBitcoin = useCallback(\n    async (toAddress: string, satoshis: number, options?: { feeRate: number }) => {\n      if (!connector) {\n        throw new Error('Wallet not connected!');\n      }\n\n      const signature = await connector.sendBitcoin(toAddress, satoshis, options);\n      return signature;\n    },\n    [connector]\n  );\n\n  const getNetwork = useCallback(async () => {\n    if (!connector) {\n      throw new Error('Wallet not connected!');\n    }\n    const network = await connector.getNetwork();\n    return network;\n  }, [connector]);\n\n  const switchNetwork = useCallback(\n    async (network: 'livenet' | 'testnet') => {\n      if (!connector) {\n        throw new Error('Wallet not connected!');\n      }\n      await connector.switchNetwork(network);\n    },\n    [connector]\n  );\n\n  const smartAccount = useMemo(() => {\n    if (typeof window === 'undefined') {\n      return undefined;\n    }\n\n    if (\n      !(window as any).__bitcoinSmartAccount ||\n      ((window as any)?.__bitcoinSmartAccount &&\n        (window as any)?.__bitcoinSmartAccount.smartAccountContract.version !== btcContractVersion)\n    ) {\n      const smartAccount = new SmartAccount(\n        new AASignerProvider(evmSupportChainIds, options.projectId, options.clientKey, options.rpcUrls) as any,\n        options\n      );\n      smartAccount.setSmartAccountContract({\n        name: 'BTC',\n        version: btcContractVersion,\n      });\n      (window as any).__bitcoinSmartAccount = smartAccount;\n    }\n    (window as any).__bitcoinSmartAccount.provider.getPublicKey = getPublicKey;\n    (window as any).__bitcoinSmartAccount.provider.personalSign = signMessage;\n    return (window as any).__bitcoinSmartAccount as SmartAccount;\n  }, [options, evmSupportChainIds, getPublicKey, signMessage, btcContractVersion]);\n\n  useEffect(() => {\n    if (accounts.length > 0 && smartAccount) {\n      getBTCAAAddress(smartAccount, accounts[0], btcContractVersion)\n        .then((res) => {\n          setEVMAccount(res);\n        })\n        .catch((e) => {\n          setEVMAccount(undefined);\n          console.error('smartAccount getAddress error', e);\n          // ignore\n        });\n    } else {\n      setEVMAccount(undefined);\n    }\n  }, [accounts, smartAccount, getPublicKey, btcContractVersion]);\n\n  const requestAccount = useCallback(\n    async (connector: BaseConnector) => {\n      let accounts = await connector.getAccounts();\n      console.log('requestAccount start, autoConnect', accounts, autoConnect);\n      if (accounts.length === 0 && autoConnect) {\n        accounts = await connector.requestAccounts();\n      }\n      setAccounts(accounts);\n    },\n    [autoConnect]\n  );\n\n  useEffect(() => {\n    if (connector) {\n      requestAccount(connector).catch((e: any) => {\n        console.log('get account error', e);\n        setAccounts([]);\n      });\n    } else {\n      setAccounts([]);\n    }\n  }, [connector, requestAccount]);\n\n  useEffect(() => {\n    const onAccountChange = (accounts: string[]) => {\n      setAccounts(accounts);\n    };\n    connector?.on('accountsChanged', onAccountChange as any);\n    return () => {\n      connector?.removeListener('accountsChanged', onAccountChange as any);\n    };\n  }, [connector]);\n\n  const provider = useMemo(() => {\n    if (connectorId) {\n      return connectors.find((item) => item.metadata.id === connectorId)?.getProvider();\n    }\n  }, [connectorId, connectors]);\n\n  const disconnect = useCallback(() => {\n    localStorage.removeItem('current-connector-id');\n    txConfirm.reset();\n    if (connector) {\n      connector.disconnect();\n    }\n    setConnectorId(undefined);\n  }, [connector]);\n\n  useEffect(() => {\n    let BTCVersion = localStorage.getItem(BTCVersionKey) || '1.0.0';\n    if (!checkBTCVersion(options.aaOptions.accountContracts, BTCVersion as string)) {\n      BTCVersion = options.aaOptions.accountContracts['BTC'][0].version;\n    }\n    setBTCContractVersion(BTCVersion as string);\n  }, [options.aaOptions.accountContracts, setBTCContractVersion]);\n\n  useEffect(() => {\n    const supportChains = evmSupportChainIds.map((id) => chains.getEVMChainInfoById(id));\n    if (supportChains.some((chain) => !chain)) {\n      throw new Error(`Please config valid chain ids, ${JSON.stringify(evmSupportChainIds)}`);\n    }\n    walletEntryPlugin.init(\n      {\n        projectId: options.projectId,\n        clientKey: options.clientKey,\n        appId: options.appId,\n      },\n      {\n        ...options.walletOptions,\n        erc4337: {\n          name: 'BTC',\n          version: btcContractVersion,\n        },\n        customStyle: {\n          ...options.walletOptions?.customStyle,\n          supportChains: supportChains as any,\n          evmSupportWalletConnect: false,\n        },\n      }\n    );\n    console.log('walletEntryPlugin init');\n  }, [options, evmSupportChainIds, btcContractVersion]);\n\n  useEffect(() => {\n    if (smartAccount) {\n      walletEntryPlugin.setWalletCore({\n        ethereum: smartAccount.provider,\n      });\n      console.log('walletEntryPlugin setWalletCore');\n    }\n  }, [smartAccount, options, evmSupportChainIds]);\n\n  useEffect(() => {\n    if (evmAccount) {\n      walletEntryPlugin.walletEntryCreate();\n      console.log('walletEntryPlugin walletEntryCreate');\n    } else {\n      walletEntryPlugin.walletEntryDestroy();\n      console.log('walletEntryPlugin walletEntryDestroy');\n    }\n  }, [evmAccount, smartAccount, options, evmSupportChainIds]);\n\n  useEffect(() => {\n    if (accounts.length === 0) {\n      closeConnectModal();\n      closeSignModal();\n      if (events.listenerCount(EventName.sendUserOpResult) > 0) {\n        events.emit(EventName.sendUserOpResult, {\n          error: {\n            code: -32600,\n            message: 'Wallet disconnected',\n          },\n        });\n      }\n    }\n  }, [accounts, closeConnectModal, closeSignModal]);\n\n  return (\n    <ConnectContext.Provider\n      value={{\n        connectorId,\n        setConnectorId,\n        connector,\n        connectors,\n        openConnectModal,\n        closeConnectModal,\n        accounts,\n        provider,\n        disconnect,\n        getPublicKey,\n        signMessage,\n        evmAccount,\n        smartAccount,\n        getNetwork,\n        switchNetwork,\n        sendBitcoin,\n        btcContractVersion,\n        setBTCContractVersion,\n        btcContractVersionList,\n      }}\n    >\n      {children}\n      <ConnectModal open={connectModalOpen} onClose={closeConnectModal} />\n      <SignModal open={signModalOpen} onClose={closeSignModal} onOpen={openSignModal} />\n    </ConnectContext.Provider>\n  );\n};\n\nexport const useConnectProvider = () => {\n  const context = useContext(ConnectContext);\n  return context;\n};\n", "import { useEffect, useState } from 'react';\nimport { type BaseConnector } from '../../connector/base';\nimport { useConnectProvider } from '../../context';\nimport { useConnector } from '../../hooks';\nimport back from '../../icons/back.svg';\nimport close from '../../icons/close.svg';\nimport retryIcon from '../../icons/retry.svg';\nimport Button from '../button';\nimport Modal from '../modal';\nimport styles from './connect.module.scss';\n\nconst ConnectModal = ({ open, onClose }: { open: boolean; onClose: () => void }) => {\n  const [backVisible, setBackVisible] = useState(false);\n  const [retryVisible, setRetryVisible] = useState(false);\n  const [walletReady, setWalletReady] = useState(true);\n  const [selectConnector, setSelectConnector] = useState<BaseConnector>();\n  const { closeConnectModal } = useConnectProvider();\n  const { connect, connectors } = useConnector();\n\n  useEffect(() => {\n    if (!open) {\n      setBackVisible(false);\n      setRetryVisible(false);\n      setWalletReady(true);\n      setSelectConnector(undefined);\n    }\n  }, [open]);\n\n  const onConnect = async (connector: BaseConnector) => {\n    setBackVisible(true);\n    setSelectConnector(connector);\n    if (connector.isReady()) {\n      try {\n        await connect(connector.metadata.id);\n        closeConnectModal();\n      } catch (error: any) {\n        console.error('onConnect error', error);\n        if (error.code === 4001) {\n          setRetryVisible(true);\n        }\n      }\n    } else {\n      setWalletReady(false);\n    }\n  };\n\n  const onBack = () => {\n    setBackVisible(false);\n    setRetryVisible(false);\n    setWalletReady(true);\n    setSelectConnector(undefined);\n  };\n\n  const onRetry = () => {\n    setRetryVisible(false);\n    if (selectConnector) {\n      onConnect(selectConnector);\n    }\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} isDismissable={false} contentClassName={styles.connectModal}>\n      <div className={styles.title}>{selectConnector?.metadata.name || 'Choose Wallet'}</div>\n      <img className={styles.closeBtn} src={close} onClick={onClose}></img>\n      {backVisible && <img className={styles.backBtn} src={back} onClick={onBack}></img>}\n\n      {!backVisible &&\n        connectors.map((connector) => {\n          return (\n            <div className={styles.walletItem} key={connector.metadata.id} onClick={() => onConnect(connector)}>\n              <img className={styles.walletIcon} src={connector.metadata.icon}></img>\n              <div className={styles.walletName}>{connector.metadata.name}</div>\n            </div>\n          );\n        })}\n\n      {backVisible && selectConnector && (\n        <div className={styles.connecting}>\n          <div className={styles.connectingIconContainer}>\n            <img className={styles.connectingIcon} src={selectConnector.metadata.icon}></img>\n            {retryVisible && (\n              <div className={styles.retryContainer} onClick={onRetry}>\n                <img className={styles.retryIcon} src={retryIcon}></img>\n              </div>\n            )}\n          </div>\n\n          {walletReady ? (\n            <>\n              <div className={styles.connection}>{retryVisible ? 'Request Cancelled' : 'Requesting Connection'}</div>\n              <div className={styles.acceptRequest}>\n                {retryVisible\n                  ? 'You cancelled the request.\\nClick above to try again.'\n                  : 'Accept the request through your wallet to connect to this app.'}\n              </div>\n            </>\n          ) : (\n            <>\n              <div className={styles.connection}>Wallet Not Installed.</div>\n              <Button\n                className={styles.btnDownload}\n                onClick={() => {\n                  window.open(selectConnector?.metadata.downloadUrl, '_blank');\n                }}\n              >\n                Get\n              </Button>\n            </>\n          )}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default ConnectModal;\n", "import { useConnectProvider } from '../context';\n\nexport const useAccounts = () => {\n  const { accounts } = useConnectProvider();\n  return { accounts };\n};\n", "import { useConnectProvider } from '../context';\n\nexport const useBTCContractVersion = () => {\n  const { btcContractVersionList, btcContractVersion, setBTCContractVersion } = useConnectProvider();\n  return {\n    btcContractVersionList,\n    btcContractVersion,\n    setBTCContractVersion,\n  };\n};\n", "import { useCallback } from 'react';\nimport { useConnectProvider } from '../context';\n\nexport const useBTCProvider = () => {\n  const { connector, provider, accounts, getPublicKey, signMessage, getNetwork, switchNetwork, sendBitcoin } =\n    useConnectProvider();\n\n  const sendInscription = useCallback(\n    async (address: string, inscriptionId: string, options?: { feeRate: number }) => {\n      if (!connector) {\n        throw new Error('Wallet not connected!');\n      }\n      const result = await connector.sendInscription(address, inscriptionId, options);\n      return result;\n    },\n    [connector]\n  );\n\n  return { provider, accounts, getPublicKey, signMessage, getNetwork, switchNetwork, sendBitcoin, sendInscription };\n};\n", "import { useConnectProvider } from '../context';\n\nexport const useConnectModal = () => {\n  const { openConnectModal, disconnect } = useConnectProvider();\n  return { openConnectModal, disconnect };\n};\n", "import { useCallback } from 'react';\nimport { useConnectProvider } from '../context';\n\nexport const useConnector = () => {\n  const { connectors, setConnectorId } = useConnectProvider();\n\n  const connect = useCallback(\n    async (connectorId: string) => {\n      const connector = connectors.find((item) => item.metadata.id === connectorId);\n      if (!connector) {\n        throw new Error(`connector id ${connectorId} not found`);\n      }\n      const accounts = await connector.requestAccounts();\n      if (accounts.length > 0) {\n        localStorage.setItem('current-connector-id', connector.metadata.id);\n        setConnectorId(connector.metadata.id);\n      }\n    },\n    [connectors, setConnectorId]\n  );\n\n  return { connectors, connect };\n};\n", "import { intToHex } from '@ethereumjs/util';\nimport type { SendTransactionParams, Transaction, UserOpBundle, UserOpParams } from '@particle-network/aa';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport type { PublicClient } from 'viem';\nimport { useConnectProvider } from '../context';\nimport { EthereumProvider } from '../evmSigner/provider';\nimport { EventName } from '../types/eventName';\nimport events from '../utils/eventUtils';\nimport txConfirm from '../utils/txConfirmUtils';\n\nexport const useETHProvider = () => {\n  const { evmAccount, smartAccount } = useConnectProvider();\n  const [chainId, setChainId] = useState<number>();\n\n  useEffect(() => {\n    if (smartAccount) {\n      const chainId = (smartAccount.provider as any).chainId as number;\n      setChainId(chainId);\n\n      const onChangeChange = (id: string) => {\n        setChainId(Number(id));\n      };\n      smartAccount.provider.on('chainChanged', onChangeChange);\n      return () => {\n        smartAccount.provider.removeListener('chainChanged', onChangeChange);\n      };\n    }\n  }, [smartAccount]);\n\n  const switchChain = useCallback(\n    async (chainId: number) => {\n      if (smartAccount?.provider) {\n        await smartAccount.provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [\n            {\n              chainId: intToHex(chainId),\n            },\n          ],\n        });\n      }\n    },\n    [smartAccount?.provider]\n  );\n\n  const getFeeQuotes = useCallback(\n    async (tx: Transaction | Transaction[]) => {\n      if (!smartAccount) {\n        throw new Error('The smart account is not initialized.');\n      }\n      return smartAccount.getFeeQuotes(tx);\n    },\n    [smartAccount]\n  );\n\n  const buildUserOp = useCallback(\n    async ({ tx, feeQuote, tokenPaymasterAddress }: UserOpParams) => {\n      if (!smartAccount) {\n        throw new Error('The smart account is not initialized.');\n      }\n      const result = await smartAccount.buildUserOperation({ tx, feeQuote, tokenPaymasterAddress });\n      return result;\n    },\n    [smartAccount]\n  );\n\n  const sendUserOp = useCallback(\n    async (params: SendTransactionParams, forceHideConfirmModal?: boolean) => {\n      if (!smartAccount) {\n        throw new Error('The smart account is not initialized.');\n      }\n\n      const showConfirmModal = !forceHideConfirmModal && !txConfirm.isNotRemind();\n\n      if (showConfirmModal) {\n        if (events.listenerCount(EventName.sendUserOpResult) > 0) {\n          throw new Error('Operation failed, there is a transaction being processed');\n        }\n      }\n\n      let userOpBundle: UserOpBundle | undefined;\n      if (\n        Object.prototype.hasOwnProperty.call(params, 'userOpHash') &&\n        Object.prototype.hasOwnProperty.call(params, 'userOp')\n      ) {\n        const { userOpHash, userOp } = params as UserOpBundle;\n        if (userOpHash && userOp) {\n          userOpBundle = { userOpHash, userOp };\n        }\n      }\n\n      if (!userOpBundle) {\n        const { tx, feeQuote, tokenPaymasterAddress } = params as UserOpParams;\n        userOpBundle = await buildUserOp({ tx, feeQuote, tokenPaymasterAddress });\n      }\n\n      if (!showConfirmModal) {\n        return smartAccount.sendUserOperation(userOpBundle);\n      }\n\n      return new Promise<string>((resolve, reject) => {\n        events.emit(EventName.sendUserOp, userOpBundle);\n        events.once(EventName.sendUserOpResult, ({ result, error }) => {\n          if (result) {\n            resolve(result);\n          } else {\n            reject(error);\n          }\n        });\n      });\n    },\n    [smartAccount, buildUserOp]\n  );\n\n  const publicClient = useMemo(() => {\n    if (!smartAccount || !chainId) {\n      return undefined;\n    }\n    return (smartAccount?.provider as any).publicClient as PublicClient;\n  }, [smartAccount, chainId]);\n\n  const provider = useMemo(() => {\n    const ethereumProvider = new EthereumProvider(sendUserOp, smartAccount?.provider as any, evmAccount);\n    return ethereumProvider;\n  }, [evmAccount, sendUserOp, smartAccount?.provider]);\n\n  return {\n    provider,\n    evmAccount,\n    switchChain,\n    chainId,\n    getFeeQuotes,\n    buildUserOp,\n    sendUserOp,\n    publicClient,\n  };\n};\n", "import type { IEthereumProvider, JsonRpcRequest, SendTransactionParams } from '@particle-network/aa';\nimport { type AASignerProvider } from '.';\n\nexport class EthereumProvider implements IEthereumProvider {\n  constructor(\n    public sendUserOp: (params: SendTransactionParams, forceHideConfirmModal?: boolean) => Promise<string>,\n    public signer?: AASignerProvider,\n    public account?: string\n  ) {}\n\n  on(event: string, listener: any): this {\n    this.signer?.on(event, listener);\n    return this;\n  }\n\n  once(event: string, listener: any): this {\n    this.signer?.once(event, listener);\n    return this;\n  }\n\n  off(event: string, listener: any): this {\n    this.signer?.off(event, listener);\n    return this;\n  }\n\n  removeListener(event: string, listener: any): this {\n    this.signer?.removeListener(event, listener);\n    return this;\n  }\n\n  async request(arg: Partial<JsonRpcRequest>): Promise<any> {\n    const method = arg.method;\n    if (!method) {\n      throw new Error('Method not found.');\n    }\n\n    if (method === 'eth_accounts' || method === 'eth_requestAccounts') {\n      return this.account ? [this.account] : [];\n    } else if (method === 'eth_sendTransaction') {\n      const txData = arg.params?.[0];\n      const result = await this.sendUserOp({ tx: txData });\n      return result;\n    }\n\n    return this.signer?.request(arg as any);\n  }\n}\n", "import { EventEmitter } from 'events';\n\nconst events = new EventEmitter();\nevents.setMaxListeners(100);\n\nexport default events;\n", "const txConfirm = {\n  isNotRemind: () => {\n    if (typeof window === 'undefined') return false;\n    const value = localStorage.getItem('tx-confirm-modal-remind');\n    return value === '0';\n  },\n  setNotRemind: (notRemind: boolean) => {\n    if (typeof window === 'undefined') return;\n    if (notRemind) {\n      localStorage.setItem('tx-confirm-modal-remind', '0');\n    } else {\n      localStorage.removeItem('tx-confirm-modal-remind');\n    }\n  },\n  reset: () => {\n    if (typeof window === 'undefined') return;\n    localStorage.removeItem('tx-confirm-modal-remind');\n  },\n};\n\nexport default txConfirm;\n", "\nconst digest = '906d42389ecad5c2ab92642c8e0775ea667c413b069684ce9d01199562f2d0be';\nconst classes = {\"loader\":\"_loader_g0am3_1\",\"rotate\":\"_rotate_g0am3_1\",\"prixClipFix\":\"_prixClipFix_g0am3_1\"};\nconst css = `._loader_g0am3_1{animation:_rotate_g0am3_1 1s linear infinite;border-radius:50%;height:20px;position:relative;width:20px}._loader_g0am3_1:before{animation:_prixClipFix_g0am3_1 2s linear infinite;border:2px solid #000;border-radius:50%;box-sizing:border-box;content:\"\";inset:0;position:absolute}@keyframes _rotate_g0am3_1{to{transform:rotate(1turn)}}@keyframes _prixClipFix_g0am3_1{0%{clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}25%{clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}50%{clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}75%{clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}to{clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import { type CSSProperties } from 'react';\nimport styles from './spinner.module.scss';\n\nconst Spinner = ({ className, style }: { className?: string; style?: CSSProperties | undefined }) => {\n  return <span className={styles.loader + (className ? ` ${className}` : '')} style={style}></span>;\n};\n\nexport default Spinner;\n", "\nconst digest = '424d614dbc2763d7cad7ca35c00bd255c6ed55da308a1f3018594201a47127bf';\nconst classes = {\"btn\":\"_btn_ofd87_1\"};\nconst css = `._btn_ofd87_1{align-items:center;background:#fff;border-radius:8px;color:#000;display:flex;flex-direction:row;font-size:16px;gap:16px;justify-content:center;padding:6px 24px;position:relative}._btn_ofd87_1:hover{opacity:.85}._btn_ofd87_1:disabled{background:hsla(0,0%,100%,.2);color:hsla(0,0%,100%,.639);cursor:not-allowed;opacity:1}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import { type CSSProperties, type ReactNode } from 'react';\nimport Spinner from '../spinner';\nimport styles from './button.module.scss';\n\nconst Button = ({\n  children,\n  isLoading,\n  isDisabled,\n  onClick,\n  className,\n  style,\n}: {\n  children: ReactNode;\n  isLoading?: boolean;\n  isDisabled?: boolean;\n  onClick?: () => void;\n  className?: string;\n  style?: CSSProperties | undefined;\n}) => {\n  return (\n    <button\n      className={styles.btn + (className ? ` ${className}` : '')}\n      onClick={isLoading || isDisabled ? undefined : onClick}\n      disabled={isDisabled}\n      style={style}\n    >\n      {isLoading && !isDisabled && <Spinner />}\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n", "import { useEffect, useMemo, useState, type CSSProperties, type MouseEventHandler, type ReactNode } from 'react';\nimport { createPortal } from 'react-dom';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport styles from './modal.module.scss';\n\ninterface ModalProp {\n  open: boolean;\n  onClose: () => void;\n  children: ReactNode;\n  isDismissable?: boolean;\n  contentStyle?: CSSProperties | undefined;\n  contentClassName?: string;\n}\n\nconst stopPropagation: MouseEventHandler<unknown> = (event) => event.stopPropagation();\n\nconst Modal = ({ open, onClose, children, isDismissable = true, contentStyle, contentClassName }: ModalProp) => {\n  const handleBackdropClick = useMemo(() => (isDismissable ? onClose : undefined), [onClose, isDismissable]);\n\n  useEffect(() => {\n    if (isDismissable) {\n      const handleEscape = (event: KeyboardEvent) => open && event.key === 'Escape' && onClose();\n\n      document.addEventListener('keydown', handleEscape);\n\n      return () => document.removeEventListener('keydown', handleEscape);\n    }\n  }, [open, onClose, isDismissable]);\n\n  const [bodyScrollable, setBodyScrollable] = useState(true);\n  useEffect(() => {\n    setBodyScrollable(getComputedStyle(window.document.body).overflow !== 'hidden');\n  }, []);\n\n  return (\n    <>\n      {open\n        ? createPortal(\n            <RemoveScroll enabled={bodyScrollable}>\n              <div className={styles.container} onClick={handleBackdropClick}>\n                <div\n                  className={styles.modal + (contentClassName ? ` ${contentClassName}` : '')}\n                  style={contentStyle}\n                  onClick={stopPropagation}\n                >\n                  {children}\n                </div>\n              </div>\n            </RemoveScroll>,\n            document.body\n          )\n        : null}\n    </>\n  );\n};\n\nexport default Modal;\n", "\nconst digest = '65eada90924218eba4e72a5f00291c3cb69387ecce1351e454cdefd066d4bcff';\nconst classes = {\"container\":\"_container_smzpm_1\",\"modal\":\"_modal_smzpm_18\"};\nconst css = `._container_smzpm_1{align-items:center;backdrop-filter:blur(12px);background:rgba(0,0,0,.502);bottom:0;color:#fff;display:flex;height:100%;justify-content:center;left:0;overflow:hidden;position:fixed;right:0;top:0;width:100%;z-index:100000}._container_smzpm_1 ._modal_smzpm_18{align-items:center;background-color:#171a1f;border-radius:16px;display:flex;flex-direction:column;font-size:14px;height:auto;margin:16px;max-height:80%;max-width:100%;overflow:auto;padding:24px;position:relative;width:380px}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "\nconst digest = 'c7bbc091f1227154742a5bd0d55a3df29eb913eb0ad4cafc7ab236b574002f65';\nconst classes = {\"connectModal\":\"_connectModal_1kqtj_1\",\"title\":\"_title_1kqtj_4\",\"closeBtn\":\"_closeBtn_1kqtj_9\",\"backBtn\":\"_backBtn_1kqtj_15\",\"walletItem\":\"_walletItem_1kqtj_21\",\"walletIcon\":\"_walletIcon_1kqtj_33\",\"walletName\":\"_walletName_1kqtj_38\",\"connecting\":\"_connecting_1kqtj_43\",\"connectingIconContainer\":\"_connectingIconContainer_1kqtj_51\",\"retryContainer\":\"_retryContainer_1kqtj_54\",\"retryIcon\":\"_retryIcon_1kqtj_63\",\"connectingIcon\":\"_connectingIcon_1kqtj_51\",\"connection\":\"_connection_1kqtj_72\",\"acceptRequest\":\"_acceptRequest_1kqtj_76\",\"btnDownload\":\"_btnDownload_1kqtj_83\"};\nconst css = `._connectModal_1kqtj_1{gap:12px}._connectModal_1kqtj_1 ._title_1kqtj_4{font-size:18px;font-weight:700;margin-bottom:4px}._connectModal_1kqtj_1 ._closeBtn_1kqtj_9{cursor:pointer;position:absolute;right:16px;top:16px}._connectModal_1kqtj_1 ._backBtn_1kqtj_15{cursor:pointer;left:16px;position:absolute;top:16px}._connectModal_1kqtj_1 ._walletItem_1kqtj_21{border:1px solid #3a3a3a;border-radius:8px;box-sizing:border-box;cursor:pointer;display:flex;padding:8px;width:100%}._connectModal_1kqtj_1 ._walletItem_1kqtj_21:hover{background:hsla(0,0%,100%,.05)}._connectModal_1kqtj_1 ._walletItem_1kqtj_21 ._walletIcon_1kqtj_33{border-radius:4px;height:42px;width:42px}._connectModal_1kqtj_1 ._walletItem_1kqtj_21 ._walletName_1kqtj_38{flex-grow:1;line-height:42px;text-align:center}._connectModal_1kqtj_1 ._connecting_1kqtj_43{align-items:center;display:flex;flex-direction:column;height:204px;justify-content:center;width:100%}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._connectingIconContainer_1kqtj_51{position:relative}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._connectingIconContainer_1kqtj_51 ._retryContainer_1kqtj_54{background:#4b5563;border-radius:50%;bottom:-12px;cursor:pointer;padding:4px;position:absolute;right:-12px}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._connectingIconContainer_1kqtj_51 ._retryContainer_1kqtj_54 ._retryIcon_1kqtj_63{height:24px;width:24px}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._connectingIcon_1kqtj_51{border-radius:4px;height:60px;width:60px}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._connection_1kqtj_72{font-size:18px;margin-top:20px}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._acceptRequest_1kqtj_76{color:hsla(0,0%,100%,.4);font-size:14px;margin-top:6px;text-align:center;white-space:pre-wrap}._connectModal_1kqtj_1 ._connecting_1kqtj_43 ._btnDownload_1kqtj_83{margin-top:20px}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import type { UserOpBundle } from '@particle-network/aa';\nimport { chains } from '@particle-network/chains';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { formatEther, type Hex } from 'viem';\nimport { useConnectProvider } from '../../context';\nimport { useETHProvider } from '../../hooks';\nimport { useBTCContractVersion } from '../../hooks/useBTCContractVersion';\nimport checkBox from '../../icons/check_box.svg';\nimport checkBoxBlank from '../../icons/check_box_blank.svg';\nimport close from '../../icons/close.svg';\nimport copy from '../../icons/copy.svg';\nimport { type EVMDeserializeTransactionResult } from '../../types/deserializeTx';\nimport { EventName } from '../../types/eventName';\nimport { shortString } from '../../utils';\nimport { caculateNativeFee } from '../../utils/ethereumUtils';\nimport events from '../../utils/eventUtils';\nimport txConfirm from '../../utils/txConfirmUtils';\nimport Button from '../button';\nimport CopyText from '../copyText';\nimport Modal from '../modal';\nimport TransactionDetails from '../transactionDetails';\nimport styles from './sign.module.scss';\n\nconst SignModal = ({ open, onClose, onOpen }: { open: boolean; onClose: () => void; onOpen: () => void }) => {\n  const [userOpBundle, setUserOpBundle] = useState<UserOpBundle>();\n  const [notRemindChecked, setNotRemindChecked] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [deserializeLoading, setDeserializeLoading] = useState<boolean>(false);\n  const [deserializeResult, setDeserializeResult] = useState<EVMDeserializeTransactionResult[] | undefined>();\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const [showNotRemind, setShowNotRemind] = useState<boolean>(true);\n  const [nativeBalance, setNativeBalance] = useState<bigint>();\n  const { btcContractVersion } = useBTCContractVersion();\n\n  const { chainId, publicClient, evmAccount } = useETHProvider();\n  const { smartAccount } = useConnectProvider();\n\n  useEffect(() => {\n    if (!open) {\n      setDeserializeResult(undefined);\n      setUserOpBundle(undefined);\n      setLoading(false);\n      setDisabled(false);\n      setDeserializeLoading(false);\n      setNativeBalance(undefined);\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (open) {\n      const notRemind = txConfirm.isNotRemind();\n      setShowNotRemind(!notRemind);\n      if (!notRemind) {\n        setNotRemindChecked(false);\n      }\n    }\n  }, [open]);\n\n  const chainInfo = useMemo(() => {\n    if (chainId) {\n      return chains.getEVMChainInfoById(chainId);\n    }\n  }, [chainId]);\n\n  useEffect(() => {\n    const onSendUserOp = (opBundle: UserOpBundle) => {\n      setUserOpBundle(opBundle);\n      onOpen();\n    };\n    events.on(EventName.sendUserOp, onSendUserOp);\n    return () => {\n      events.off(EventName.sendUserOp, onSendUserOp);\n    };\n  }, [onOpen, setUserOpBundle]);\n\n  const deserializeUserOp = useCallback(async () => {\n    if (userOpBundle && smartAccount) {\n      const addresses = await smartAccount.provider.request({ method: 'eth_accounts' });\n      const owner = addresses[0];\n      const result = await smartAccount.sendRpc({\n        method: 'particle_aa_deserializeUserOp',\n        params: [\n          {\n            name: 'BTC',\n            version: btcContractVersion,\n            ownerAddress: owner,\n          },\n          userOpBundle.userOp,\n        ],\n      });\n      return result;\n    }\n  }, [userOpBundle, smartAccount, btcContractVersion]);\n\n  useEffect(() => {\n    if (userOpBundle && open) {\n      console.log('deserializeUserOp start');\n      deserializeUserOp()\n        .then((result) => {\n          console.log('\uD83D\uDE80 ~ deserializeUserOp ~ result:', result);\n          setDeserializeResult(result as any);\n        })\n        .catch((error) => {\n          console.log('\uD83D\uDE80 ~ deserializeUserOp ~ error:', error);\n          events.emit(EventName.sendUserOpResult, {\n            error,\n          });\n          onClose();\n        });\n    }\n  }, [deserializeUserOp, userOpBundle, open, onClose]);\n\n  useEffect(() => {\n    if (open && publicClient && evmAccount) {\n      publicClient\n        .getBalance({ address: evmAccount as Hex })\n        .then((result) => setNativeBalance(result))\n        .catch((error) => {\n          console.log('\uD83D\uDE80 ~ getBalance ~ error:', error);\n          events.emit(EventName.sendUserOpResult, {\n            error,\n          });\n          onClose();\n        });\n    }\n  }, [open, publicClient, evmAccount, onClose]);\n\n  useEffect(() => {\n    if (nativeBalance != null && deserializeResult != null) {\n      setDeserializeLoading(false);\n    } else {\n      setDeserializeLoading(true);\n    }\n  }, [nativeBalance, deserializeResult]);\n\n  const toggleNotRemind = () => {\n    setNotRemindChecked(!notRemindChecked);\n    txConfirm.setNotRemind(!notRemindChecked);\n  };\n\n  const gasFee = useMemo(() => {\n    if (userOpBundle?.userOp) {\n      return caculateNativeFee(userOpBundle?.userOp);\n    }\n    return BigInt(0);\n  }, [userOpBundle]);\n\n  const closeModal = () => {\n    events.emit(EventName.sendUserOpResult, {\n      error: {\n        code: 4001,\n        message: 'The user rejected the request.',\n      },\n    });\n    onClose();\n  };\n\n  const confirmTx = useCallback(async () => {\n    if (smartAccount && userOpBundle) {\n      setLoading(true);\n      try {\n        const hash = await smartAccount.sendUserOperation(userOpBundle);\n        events.emit(EventName.sendUserOpResult, { result: hash });\n      } catch (error) {\n        events.emit(EventName.sendUserOpResult, {\n          error,\n        });\n      } finally {\n        setLoading(false);\n      }\n      onClose();\n    }\n  }, [smartAccount, userOpBundle, onClose]);\n\n  useEffect(() => {\n    if (userOpBundle && nativeBalance != null && deserializeResult) {\n      const nativeChange = deserializeResult\n        .filter(\n          (item) =>\n            item.estimatedChanges.natives?.[0]?.nativeChange &&\n            item.estimatedChanges.natives[0].nativeChange.startsWith('-')\n        )\n        .map((item) => BigInt(item.estimatedChanges?.natives?.[0]?.nativeChange?.replace('-', '') || 0))\n        .reduce((accumulator, currentValue) => accumulator + currentValue, BigInt(0));\n      if (userOpBundle.userOp.paymasterAndData.length > 2) {\n        // \u8BA1\u7B97\u4F59\u989D\uFF0C\u9700\u5927\u4E8E\u7B49\u4E8EnativeChange\n        setDisabled(nativeBalance < nativeChange);\n      } else {\n        // \u8BA1\u7B97\u4F59\u989D\uFF0C\u9700\u5927\u4E8E\u7B49\u4E8EgasFee+nativeChange\n        setDisabled(nativeBalance < gasFee + nativeChange);\n      }\n    }\n  }, [userOpBundle, gasFee, nativeBalance, deserializeResult]);\n\n  return (\n    <Modal open={open} onClose={onClose} isDismissable={false} contentClassName={styles.modalContent}>\n      <>\n        <img className={styles.closeBtn} src={close} onClick={closeModal}></img>\n\n        <div className={styles.chainInfo}>\n          <img src={chainInfo?.icon}></img>\n          {chainInfo?.fullname.replace('Mainnet', '')}\n        </div>\n\n        <div className={styles.addressContainer}>\n          <CopyText value={evmAccount} style={{ textDecorationLine: 'none' }}>\n            <div className={styles.addressInfo}>\n              {shortString(evmAccount)}\n              <img src={copy}></img>\n            </div>\n          </CopyText>\n        </div>\n\n        <div className={styles.detailsContent + (deserializeResult ? ` ${styles.fill}` : '')}>\n          {deserializeResult &&\n            deserializeResult.map((details, index) => (\n              <TransactionDetails key={`${details.type}-${index}`} details={details} />\n            ))}\n        </div>\n\n        {gasFee && (\n          <div className={styles.estimatedGas}>{`Estimated gas fee: ${formatEther(gasFee)} ${chainInfo?.nativeCurrency\n            .symbol}`}</div>\n        )}\n\n        <Button\n          onClick={confirmTx}\n          className={styles.signBtn}\n          isLoading={loading || deserializeLoading}\n          isDisabled={disabled}\n        >\n          {deserializeLoading ? 'LOADING' : disabled ? 'INSUFFICIENT FEE' : 'CONFIRM'}\n        </Button>\n\n        {showNotRemind && (\n          <div className={styles.notRemind} onClick={toggleNotRemind}>\n            <img src={notRemindChecked ? checkBox : checkBoxBlank}></img>\n            Do not remind me again\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n};\n\nexport default SignModal;\n", "import type { AAOptions } from '@particle-network/aa';\n\nexport function shortString(str: any): string {\n  if (Array.isArray(str)) {\n    str = '[' + str.toString() + ']';\n  }\n  if (str) {\n    if (typeof str.toString === 'function') {\n      str = str.toString();\n    }\n    if (str.length <= 10) {\n      return str;\n    }\n    return `${str.slice(0, 5)}...${str.slice(str.length - 5, str.length)}`;\n  }\n  return '';\n}\n\n/**\n * \u590D\u5236\u5230\u526A\u8D34\u677F\n * @param {string} text\n * @returns {Promise<void>}\n */\nexport async function copyToClipboard(text: string) {\n  const clipboardCopy = async () => {\n    if (navigator.clipboard) {\n      return navigator.clipboard.writeText(text);\n    } else {\n      const textarea = document.createElement('textarea');\n      textarea.value = text;\n      textarea.setAttribute('readonly', '');\n      textarea.style.position = 'absolute';\n      textarea.style.left = '-9999px';\n      document.body.appendChild(textarea);\n\n      textarea.select();\n      const result = document.execCommand('copy');\n\n      document.body.removeChild(textarea);\n\n      if (!result) {\n        throw new Error('Copy to clipboard failed');\n      }\n    }\n  };\n\n  return new Promise((resolve, reject) => {\n    clipboardCopy().then(resolve).catch(reject);\n  });\n}\n\nexport const defaultTokenIcon = 'https://static.particle.network/token-list/defaultToken/default.png';\n\nexport const ipfsToSrc = (ipfs: string) => {\n  if (!ipfs || !ipfs.startsWith('ipfs://')) {\n    return ipfs || '';\n  }\n\n  return `https://ipfs.particle.network/${encodeURI(ipfs.slice(7))}`;\n};\n\nexport const checkBTCVersion = (accountContracts: AAOptions['accountContracts'], version: string) => {\n  if (!accountContracts['BTC']) {\n    return false;\n  }\n  return accountContracts['BTC'].some((item) => item.version === version);\n};\n", "import { bytesToHex, publicToAddress, toBytes, toChecksumAddress, toRpcSig } from '@ethereumjs/util';\nimport type { SmartAccount, UserOp } from '@particle-network/aa';\nimport bitcore from 'bitcore-lib';\n\nexport const pubKeyToEVMAddress = (pubKey: string) => {\n  const address = toChecksumAddress(bytesToHex(publicToAddress(toBytes(`0x${pubKey}`), true)));\n  return address;\n};\n\nexport const convertSignature = (signature: string) => {\n  const sig = (bitcore.crypto.Signature as any).fromCompact(Buffer.from(signature, 'base64'));\n  const v = BigInt(sig.i + 27);\n  const evmSig = toRpcSig(v, sig.r.toBuffer(), sig.s.toBuffer());\n  return evmSig;\n};\n\nexport function caculateNativeFee(userOp: UserOp): bigint {\n  return (\n    (BigInt(userOp.callGasLimit) + BigInt(userOp.verificationGasLimit) + BigInt(userOp.preVerificationGas)) *\n    BigInt(userOp.maxFeePerGas)\n  );\n}\n\nexport const getBTCAAAddress = async (\n  smartAccount: SmartAccount,\n  btcAddress: string,\n  BTCVersion: string\n): Promise<string> => {\n  const addresses = await smartAccount.provider.request({ method: 'eth_accounts' });\n  const owner = addresses[0];\n  const localKey = `particle_BTC_${BTCVersion}_${owner}`;\n  if (typeof window !== 'undefined' && localStorage) {\n    const localAA = localStorage.getItem(localKey);\n    if (localAA) {\n      return localAA;\n    }\n  }\n\n  const btcPublicKey = await (smartAccount.provider as any).getPublicKey();\n  const accountInfo = await smartAccount.sendRpc({\n    method: 'particle_aa_getBTCAccount',\n    params: [\n      {\n        name: 'BTC',\n        version: BTCVersion,\n        btcPublicKey,\n        btcAddress,\n      },\n    ],\n  });\n  const address = (accountInfo as any)?.[0]?.smartAccountAddress;\n\n  if (typeof window !== 'undefined' && localStorage && address) {\n    localStorage.setItem(localKey, address);\n  }\n  return address;\n};\n", "import { useState, type CSSProperties } from 'react';\nimport { copyToClipboard } from '../../utils';\nimport styles from './copyText.module.scss';\n\nexport interface CopyTextProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  value?: string;\n  className?: string;\n  style?: CSSProperties | undefined;\n}\n\nexport default function CopyText({ children, value, className, style }: CopyTextProps) {\n  const [copied, setCopied] = useState<boolean>();\n\n  const handleClick = async () => {\n    if (copied) {\n      return;\n    }\n\n    try {\n      if (value) {\n        await copyToClipboard(value);\n      } else if (typeof children === 'string' || typeof children === 'number' || typeof children === 'boolean') {\n        await copyToClipboard(children.toString());\n      } else {\n        throw new Error('please set copy value');\n      }\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1000);\n    } catch (error) {\n      //ignore\n    }\n  };\n\n  return (\n    <div\n      className={styles.copyText + (className ? ` ${className}` : '') + (copied ? ` ${styles.copied}` : '')}\n      onClick={handleClick}\n      style={style}\n    >\n      {copied ? 'Copied' : children}\n    </div>\n  );\n}\n", "\nconst digest = 'd6fbb5df7ed6ec51d41f665ca768306181bb1e7d7c1cef8eed9bd4230368d7bb';\nconst classes = {\"copyText\":\"_copyText_smolu_1\",\"copied\":\"_copied_smolu_9\"};\nconst css = `._copyText_smolu_1{cursor:pointer;text-decoration-line:underline}._copyText_smolu_1:hover{opacity:.75}._copied_smolu_9{color:#a855f7;cursor:none;text-decoration-line:none}._copied_smolu_9:hover{opacity:1}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import { chains } from '@particle-network/chains';\nimport { useCallback, useMemo } from 'react';\nimport { formatUnits } from 'viem';\nimport { useETHProvider } from '../../hooks';\nimport unverified from '../../icons/unverified.svg';\nimport verified from '../../icons/verified.svg';\nimport {\n  TransactionSmartType,\n  type EVMDeserializeTransactionResult,\n  type EVMTokenChange,\n} from '../../types/deserializeTx';\nimport { defaultTokenIcon, ipfsToSrc, shortString } from '../../utils';\nimport CopyText from '../copyText';\nimport Tooltip from '../tooltip';\nimport styles from './transactionDetails.module.scss';\n\nconst TransactionDetails = ({ details }: { details: EVMDeserializeTransactionResult }) => {\n  const { chainId } = useETHProvider();\n\n  const chainInfo = useMemo(() => {\n    if (chainId) {\n      return chains.getEVMChainInfoById(chainId);\n    }\n  }, [chainId]);\n\n  const titleContent = useMemo(() => {\n    switch (details.type) {\n      case TransactionSmartType.NATIVE_TRANSFER:\n        return `Send ${chainInfo?.nativeCurrency.symbol}`;\n      case TransactionSmartType.ERC20_TRANSFER:\n        return `Send ${details.estimatedChanges.tokens[0]?.symbol}`;\n      case TransactionSmartType.ERC20_APPROVE:\n        return 'Approve Spending';\n      case TransactionSmartType.ERC721_TRANFER:\n        return 'Send NFT';\n      case TransactionSmartType.ERC1155_TRANFER:\n        return 'Send NFT';\n      default:\n        return 'Transaction Details';\n    }\n  }, [details, chainInfo]);\n\n  const nftContractType = useMemo(() => {\n    if (details.type === TransactionSmartType.ERC721_TRANFER) {\n      return 'ERC721';\n    } else if (details.type === TransactionSmartType.ERC1155_TRANFER) {\n      return 'ERC1155';\n    }\n  }, [details]);\n\n  const nativeIcon = useMemo(() => {\n    if (chainInfo) {\n      if (chainInfo.nativeCurrency.symbol === 'ETH') {\n        return 'https://static.particle.network/token-list/ethereum/native.png';\n      } else {\n        return chainInfo.nativeIcon || chainInfo.icon;\n      }\n    }\n    return defaultTokenIcon;\n  }, [chainInfo]);\n\n  // to address\n  const to = useMemo(() => {\n    const params = details.data?.function?.params;\n    if (details.type == TransactionSmartType.ERC20_TRANSFER) {\n      return params ? (params[params.length === 3 ? 1 : 0].value as string) : '';\n    } else if (details.type == TransactionSmartType.ERC20_APPROVE) {\n      return params ? (params[0].value as string) : '';\n    } else if (details.type == TransactionSmartType.NATIVE_TRANSFER) {\n      return details.data.to;\n    } else if (\n      details.type == TransactionSmartType.ERC721_TRANFER ||\n      details.type == TransactionSmartType.ERC1155_TRANFER\n    ) {\n      return params ? (params[1].value as string) : '';\n    } else {\n      return details.data.to;\n    }\n  }, [details]);\n\n  const balanceChangeTextColor = useCallback((value: string | number) => {\n    if (BigInt(value) > 0) {\n      return '#4ade80';\n    } else if (BigInt(value) < 0) {\n      return '#ef4444';\n    } else {\n      return 'white';\n    }\n  }, []);\n\n  const functionContent = useMemo(() => {\n    if (details.type !== TransactionSmartType.NATIVE_TRANSFER && details.data.function) {\n      const params = details.data.function.params.map((item) => item.name);\n      return `${details.data.function.name}(${params.join(', ')})`;\n    }\n  }, [details]);\n\n  const approveTokenAmount = useMemo(() => {\n    if (details.type === TransactionSmartType.ERC20_APPROVE) {\n      const amount = details.data?.function?.params?.[1]?.value as string;\n      return BigInt(amount || 0);\n    }\n    return BigInt(0);\n  }, [details]);\n\n  const tokenAmountChange = useCallback(\n    (tokenItem: EVMTokenChange) => {\n      const result = formatUnits(\n        details.type === TransactionSmartType.ERC20_APPROVE ? approveTokenAmount : BigInt(tokenItem.amountChange),\n        tokenItem.decimals\n      );\n\n      if (details.type !== TransactionSmartType.ERC20_APPROVE && BigInt(tokenItem.amountChange) > BigInt(0)) {\n        return `+${result}`;\n      }\n\n      return result;\n    },\n    [approveTokenAmount, details]\n  );\n\n  const showContactAddress = useMemo(() => {\n    return (\n      details.type === TransactionSmartType.ERC20_TRANSFER ||\n      details.type === TransactionSmartType.ERC20_APPROVE ||\n      details.type === TransactionSmartType.ERC721_TRANFER ||\n      details.type === TransactionSmartType.ERC1155_TRANFER\n    );\n  }, [details]);\n\n  return (\n    <div className={styles.detailsCard}>\n      <div className={styles.title}>{titleContent}</div>\n      {nftContractType && <div className={styles.nftContract}>{nftContractType}</div>}\n\n      {details.estimatedChanges.natives.map((nativeItem) => {\n        return (\n          <div key={nativeItem.address} className={styles.row}>\n            <img className={styles.tokenIcon} src={nativeIcon}></img>\n            <div className={styles.balanceChange} style={{ color: balanceChangeTextColor(nativeItem.nativeChange) }}>\n              {BigInt(nativeItem.nativeChange) > 0 ? '+' : undefined}\n              {formatUnits(BigInt(nativeItem.nativeChange), chainInfo?.nativeCurrency.decimals || 18)}\n            </div>\n            <div className={styles.tokenSymbol}>{chainInfo?.nativeCurrency.symbol}</div>\n          </div>\n        );\n      })}\n\n      {details.estimatedChanges.tokens.map((tokenItem) => {\n        return (\n          <div key={tokenItem.address} className={styles.row}>\n            <img className={styles.tokenIcon} src={tokenItem.image || defaultTokenIcon}></img>\n            <div className={styles.balanceChange}>\n              <span style={{ color: balanceChangeTextColor(tokenItem.amountChange) }}>\n                {tokenAmountChange(tokenItem)}\n              </span>\n              {` ${tokenItem.symbol}`}\n            </div>\n          </div>\n        );\n      })}\n\n      {details.estimatedChanges.nfts.map((nftItem) => {\n        return (\n          <div key={nftItem.address} className={styles.row}>\n            <div style={{ fontSize: 16 }}>\n              <img className={styles.nftIcon} src={ipfsToSrc(nftItem.image || defaultTokenIcon)}></img>\n              {nftItem.name || `NFT#${nftItem.tokenId}`}\n            </div>\n            <div className={styles.balanceChange} style={{ color: balanceChangeTextColor(nftItem.amountChange) }}>\n              {nftItem.amountChange}\n            </div>\n          </div>\n        );\n      })}\n\n      {to && (\n        <div className={styles.row}>\n          <div>To</div>\n          <div className={styles.toContract}>\n            {details.toVerified != null && !showContactAddress && (\n              <Tooltip content={details.toVerified ? 'Verified Contract' : 'Unverified Contract'}>\n                <img src={details.toVerified ? verified : unverified}></img>\n              </Tooltip>\n            )}\n            <CopyText value={to}>{shortString(to)}</CopyText>\n          </div>\n        </div>\n      )}\n\n      {showContactAddress && (\n        <div className={styles.row}>\n          <div>Contract</div>\n          <div className={styles.toContract}>\n            {details.toVerified != null && (\n              <Tooltip content={details.toVerified ? 'Verified Contract' : 'Unverified Contract'}>\n                <img src={details.toVerified ? verified : unverified}></img>\n              </Tooltip>\n            )}\n            <CopyText value={details.data.to}>{shortString(details.data.to)}</CopyText>\n          </div>\n        </div>\n      )}\n\n      <div className={styles.row}>\n        <div>Hex Data</div>\n        <CopyText value={details.data.data}>{shortString(details.data.data)}</CopyText>\n      </div>\n\n      {functionContent && (\n        <div className={styles.row}>\n          <div>Function</div>\n          <div className={styles.right}>{functionContent}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TransactionDetails;\n", "\nconst digest = 'ee15dc27fcfd209601159e7f0e0063ff4e7a886b7b892c1600a911372b82a0b1';\nconst classes = {\"tipContainer\":\"_tipContainer_ufud7_1\",\"tipContent\":\"_tipContent_ufud7_5\"};\nconst css = `._tipContainer_ufud7_1{overflow:visible;position:relative}._tipContainer_ufud7_1 ._tipContent_ufud7_5{background:#3f3f46;border-radius:8px;bottom:100%;color:#fff;font-size:11px;left:-100%;opacity:0;padding:3px 6px;position:absolute;transition:opacity .5s;visibility:hidden;white-space:nowrap;z-index:1}._tipContainer_ufud7_1:hover ._tipContent_ufud7_5{opacity:1;visibility:visible}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import { type ReactNode } from 'react';\nimport styles from './tooltip.module.scss';\n\nconst Tooltip = ({ children, content, className }: { children: ReactNode; content: string; className?: string }) => {\n  return (\n    <div className={styles.tipContainer}>\n      {children}\n      <div className={styles.tipContent + (className ? ` ${className}` : '')}>{content}</div>\n    </div>\n  );\n};\n\nexport default Tooltip;\n", "\nconst digest = 'a81c744751497ed4b401c08b9e5aeef1991aeb86f2cbba3ee57c1926c0502f1a';\nconst classes = {\"detailsCard\":\"_detailsCard_ml2p9_1\",\"title\":\"_title_ml2p9_13\",\"nftContract\":\"_nftContract_ml2p9_19\",\"row\":\"_row_ml2p9_26\",\"tokenIcon\":\"_tokenIcon_ml2p9_35\",\"nftIcon\":\"_nftIcon_ml2p9_41\",\"balanceChange\":\"_balanceChange_ml2p9_49\",\"tokenSymbol\":\"_tokenSymbol_ml2p9_56\",\"toContract\":\"_toContract_ml2p9_61\",\"right\":\"_right_ml2p9_71\"};\nconst css = `._detailsCard_ml2p9_1{background:#232529;border:1px solid #252525;border-radius:8px;color:#fff;margin-top:16px;overflow-x:hidden;padding:10px;position:relative;width:100%}._detailsCard_ml2p9_1 ._title_ml2p9_13{font-size:16px;font-weight:600;margin-bottom:12px;text-align:left}._detailsCard_ml2p9_1 ._nftContract_ml2p9_19{color:#a855f7;font-size:16px;position:absolute;right:8px;top:8px}._detailsCard_ml2p9_1 ._row_ml2p9_26{align-items:center;display:flex;flex-direction:row;font-size:14px;gap:8px;justify-content:space-between;margin-top:6px}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._tokenIcon_ml2p9_35{border-radius:50%;height:32px;margin:10px 0;width:32px}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._nftIcon_ml2p9_41{border-radius:2px;display:inline;height:32px;margin:10px 8px 10px 0;width:32px}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._balanceChange_ml2p9_49{flex-grow:2;font-size:16px;font-weight:500;text-align:end;word-break:break-word}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._tokenSymbol_ml2p9_56{font-size:16px;font-weight:500;text-align:end}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._toContract_ml2p9_61{align-items:center;display:flex;gap:8px}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._toContract_ml2p9_61 img{display:inline;height:18px;width:18px}._detailsCard_ml2p9_1 ._row_ml2p9_26 ._right_ml2p9_71{text-align:end}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "\nconst digest = '72313e432f73b0b64e505d7f124c42b72235a12b3842ef8816b5e500b7fc785a';\nconst classes = {\"modalContent\":\"_modalContent_ikogv_1\",\"closeBtn\":\"_closeBtn_ikogv_5\",\"chainInfo\":\"_chainInfo_ikogv_11\",\"addressContainer\":\"_addressContainer_ikogv_24\",\"addressInfo\":\"_addressInfo_ikogv_29\",\"detailsContent\":\"_detailsContent_ikogv_44\",\"fill\":\"_fill_ikogv_53\",\"estimatedGas\":\"_estimatedGas_ikogv_56\",\"signBtn\":\"_signBtn_ikogv_61\",\"notRemind\":\"_notRemind_ikogv_65\"};\nconst css = `._modalContent_ikogv_1{color:#fff;text-align:center}._modalContent_ikogv_1 ._closeBtn_ikogv_5{cursor:pointer;position:absolute;right:16px;top:16px}._modalContent_ikogv_1 ._chainInfo_ikogv_11{align-items:center;display:flex;flex-direction:row;font-size:12px;gap:8px;justify-content:center;margin-bottom:8px}._modalContent_ikogv_1 ._chainInfo_ikogv_11 img{height:18px;width:18px}._modalContent_ikogv_1 ._addressContainer_ikogv_24{height:28px;margin-bottom:16px;margin-top:8px}._modalContent_ikogv_1 ._addressContainer_ikogv_24 ._addressInfo_ikogv_29{align-items:center;background:rgba(58,58,58,.635);border-radius:20px;display:flex;flex-direction:row;font-size:12px;gap:4px;justify-content:center;padding:4px 8px}._modalContent_ikogv_1 ._addressContainer_ikogv_24 ._addressInfo_ikogv_29 img{height:18px;width:18px}._modalContent_ikogv_1 ._detailsContent_ikogv_44{max-height:0;overflow-y:auto;transition:max-height .3s linear;width:100%}._modalContent_ikogv_1 ._detailsContent_ikogv_44::-webkit-scrollbar{display:none}._modalContent_ikogv_1 ._detailsContent_ikogv_44._fill_ikogv_53{max-height:500px}._modalContent_ikogv_1 ._estimatedGas_ikogv_56{color:hsla(0,0%,100%,.631);font-size:12px;margin-top:24px}._modalContent_ikogv_1 ._signBtn_ikogv_61{margin-top:24px;min-width:200px}._modalContent_ikogv_1 ._notRemind_ikogv_65{align-items:center;color:hsla(0,0%,100%,.631);cursor:pointer;display:inline-flex;font-size:12px;gap:4px;margin-top:16px}._modalContent_ikogv_1 ._notRemind_ikogv_65:hover{opacity:.85}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import { intToHex } from '@ethereumjs/util';\nimport type { RequestArguments } from '@particle-network/aa';\nimport { chains } from '@particle-network/chains';\nimport { EventEmitter } from 'events';\nimport {\n  InvalidParamsRpcError,\n  SwitchChainError,\n  UnsupportedProviderMethodError,\n  createPublicClient,\n  http,\n  type PublicClient,\n} from 'viem';\nimport { convertSignature, pubKeyToEVMAddress } from '../utils/ethereumUtils';\n\nexport class AASignerProvider {\n  private events: EventEmitter;\n  chainId = 1;\n  publicClient: PublicClient;\n  constructor(\n    public supportChainIds: number[],\n    public projectId: string,\n    public clientKey: string,\n    public rpcUrls: Record<number, string> | undefined\n  ) {\n    this.events = new EventEmitter();\n    this.events.setMaxListeners(100);\n\n    if (typeof window !== 'undefined') {\n      const localChainId = localStorage.getItem('connect-evm-chain-id');\n      if (localChainId && supportChainIds.includes(Number(localChainId))) {\n        this.chainId = Number(localChainId);\n      } else {\n        const chainId = supportChainIds[0];\n        if (!chainId) {\n          throw new Error('Please config valid chain id.');\n        }\n        localStorage.setItem('connect-evm-chain-id', chainId.toString());\n        this.chainId = chainId;\n      }\n    }\n\n    this.publicClient = this.getPublicClient();\n  }\n\n  async request(arg: RequestArguments) {\n    if (\n      arg.method === 'eth_sendTransaction' ||\n      arg.method === 'wallet_addEthereumChain' ||\n      arg.method === 'wallet_watchAsset' ||\n      arg.method === 'eth_sign' ||\n      arg.method.startsWith('eth_signTypedData')\n    ) {\n      throw new UnsupportedProviderMethodError(new Error('The Provider does not support the requested method.'));\n    }\n\n    if (arg.method === 'eth_accounts' || arg.method === 'eth_requestAccounts') {\n      const pubKey = await this.getPublicKey();\n      const address = pubKeyToEVMAddress(pubKey);\n      return [address];\n    } else if (arg.method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`;\n    } else if (arg.method === 'personal_sign') {\n      const message = arg.params?.[0];\n      const result = await this.personalSign(message || '');\n      const convertResult = convertSignature(result);\n      if (!convertResult) {\n        throw new Error('sign error');\n      }\n      return convertResult;\n    } else if (arg.method === 'wallet_switchEthereumChain') {\n      if (arg.params && arg.params instanceof Array && arg.params[0] && arg.params[0].chainId) {\n        const chainId = Number(arg.params[0].chainId);\n        if (this.supportChainIds.includes(this.chainId)) {\n          this.chainId = chainId;\n          localStorage.setItem('connect-evm-chain-id', this.chainId.toString());\n          this.publicClient = this.getPublicClient();\n          setTimeout(() => this.events.emit('chainChanged', intToHex(this.chainId)), 0);\n          return Promise.resolve(null);\n        }\n        throw new SwitchChainError(new Error(`The chain: ${chainId} is not supported`));\n      } else {\n        throw new InvalidParamsRpcError(new Error('Invalid Params'));\n      }\n    } else {\n      const result = await this.publicClient.request(arg as any);\n      return result;\n    }\n  }\n\n  personalSign = async (message: string): Promise<string> => {\n    throw new Error('Wallet not connected!');\n  };\n\n  getPublicKey = async (): Promise<string> => {\n    throw new Error('Wallet not connected!');\n  };\n\n  removeListener(event: string, listener: (...args: any[]) => void) {\n    this.events.removeListener(event, listener);\n    return this;\n  }\n\n  on(event: string, listener: (...args: any[]) => void) {\n    this.events.on(event, listener);\n    return this;\n  }\n\n  once(event: string, listener: any) {\n    this.events.once(event, listener);\n    return this;\n  }\n\n  off(event: string, listener: any) {\n    this.events.off(event, listener);\n    return this;\n  }\n\n  emit(event: string, ...args: any[]) {\n    this.events.emit(event, args);\n  }\n\n  getPublicClient = () => {\n    const rpcUrl = this?.rpcUrls?.[this.chainId] || chains.getEVMChainInfoById(this.chainId || 1)?.rpcUrl;\n    console.log('rpcUrl', rpcUrl);\n\n    return createPublicClient({\n      transport: http(rpcUrl),\n    });\n  };\n}\n", "import { useCallback, useState } from 'react';\n\nconst useModalStateValue = () => {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  return {\n    closeModal: useCallback(() => setModalOpen(false), []),\n    isModalOpen,\n    openModal: useCallback(() => setModalOpen(true), []),\n  };\n};\n\nexport default useModalStateValue;\n"],
  "mappings": "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",
  "names": ["EventEmitter", "import_chains", "import_react", "import_react", "import_react", "import_react", "import_events", "chainId", "digest", "classes", "css", "import_jsx_runtime", "import_react", "digest", "classes", "css", "import_jsx_runtime", "digest", "classes", "css", "import_jsx_runtime", "import_chains", "import_react", "import_viem", "import_util", "bitcore", "import_react", "digest", "classes", "css", "import_jsx_runtime", "import_react", "digest", "classes", "css", "import_jsx_runtime", "digest", "classes", "css", "import_jsx_runtime", "digest", "classes", "css", "import_jsx_runtime", "import_util", "import_chains", "import_events", "import_viem", "import_react", "import_jsx_runtime", "options", "smartAccount", "connector", "accounts", "_a"]
}
